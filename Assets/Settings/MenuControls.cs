//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Settings/MenuControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @MenuControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @MenuControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""MenuControls"",
    ""maps"": [
        {
            ""name"": ""MainMenu"",
            ""id"": ""750b86ef-60cf-4662-b582-b29aef271e0e"",
            ""actions"": [
                {
                    ""name"": ""NavigateUp"",
                    ""type"": ""Button"",
                    ""id"": ""f19120ad-1dd7-426d-bfd8-bdff4daea4d1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NavigateDown"",
                    ""type"": ""Button"",
                    ""id"": ""0ee68286-8362-4efa-8851-35dd520a6ae0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NavigateLeft"",
                    ""type"": ""Button"",
                    ""id"": ""6d3fb317-16ea-4af5-b09a-49dde9ce2929"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NavigateRight"",
                    ""type"": ""Button"",
                    ""id"": ""bbe54111-8f05-4d62-824c-7679bae824b4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Submit"",
                    ""type"": ""Button"",
                    ""id"": ""b2efb31c-a77c-42ed-a521-c2930b0f7bbd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""5517380a-1526-46cd-b6b9-be4cd34a9d8d"",
                    ""path"": ""<DualSenseGamepadHID>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PS5 Controller;PS5 controller"",
                    ""action"": ""NavigateUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""794d97f3-1ea2-400c-930e-1a037459d72e"",
                    ""path"": ""<DualSenseGamepadHID>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PS5 Controller;PS5 controller"",
                    ""action"": ""NavigateUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b51fbe52-76ff-460f-bf4e-e1ddcc88a8ce"",
                    ""path"": ""<DualSenseGamepadHID>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PS5 Controller;PS5 controller"",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b97a0f13-965f-4892-83d8-16d88c2b01d4"",
                    ""path"": ""<DualSenseGamepadHID>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PS5 Controller;PS5 controller"",
                    ""action"": ""NavigateDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5ea556c7-2bbb-4fb8-aec6-0fd08ae1141b"",
                    ""path"": ""<DualSenseGamepadHID>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PS5 Controller;PS5 controller"",
                    ""action"": ""NavigateDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8eb51710-50d6-4f9b-a039-e6075697412d"",
                    ""path"": ""<DualSenseGamepadHID>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PS5 Controller;PS5 controller"",
                    ""action"": ""NavigateLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a9c980be-c585-4f11-9d72-9e9adc68595b"",
                    ""path"": ""<DualSenseGamepadHID>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PS5 Controller;PS5 controller"",
                    ""action"": ""NavigateLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""478bcdb6-b76f-489e-b494-cdeefc32aa38"",
                    ""path"": ""<DualSenseGamepadHID>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PS5 Controller;PS5 controller"",
                    ""action"": ""NavigateRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""de3c6e04-d150-4f55-a908-2ed227b696a3"",
                    ""path"": ""<DualSenseGamepadHID>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PS5 Controller;PS5 controller"",
                    ""action"": ""NavigateRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""GameOverMenu"",
            ""id"": ""5defa455-4d7e-4db7-a49a-00b272703d00"",
            ""actions"": [
                {
                    ""name"": ""NavigateUp"",
                    ""type"": ""Button"",
                    ""id"": ""0f174f8c-df29-4b0a-ac0e-0ec5550a655f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NavigateDown"",
                    ""type"": ""Button"",
                    ""id"": ""bc508a06-f542-4079-8dd4-df159acae098"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NavigateLeft"",
                    ""type"": ""Button"",
                    ""id"": ""fb8c4460-5ade-4055-9b9d-c0ace9d6b509"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NavigateRight"",
                    ""type"": ""Button"",
                    ""id"": ""c8f9c559-c88e-43d5-b122-68619e2a41b8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Submit"",
                    ""type"": ""Button"",
                    ""id"": ""cf11c332-fab0-4c73-a9a7-6a74e0d98cd3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""ef8d51d2-0d99-46f2-abb9-698c2e783abe"",
                    ""path"": ""<DualSenseGamepadHID>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PS5 Controller;PS5 controller"",
                    ""action"": ""NavigateUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""411335fa-7e6f-4d69-9b16-48062012e23d"",
                    ""path"": ""<DualSenseGamepadHID>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PS5 Controller;PS5 controller"",
                    ""action"": ""NavigateUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7d8d9bc9-1ab8-42b4-b1f0-8efc528cc80f"",
                    ""path"": ""<DualSenseGamepadHID>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PS5 Controller;PS5 controller"",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fab4634d-33c0-47da-b81a-e23b9af895cb"",
                    ""path"": ""<DualSenseGamepadHID>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PS5 Controller;PS5 controller"",
                    ""action"": ""NavigateDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8b5e0bc3-82ef-4d3d-b0b9-1bdce805ed91"",
                    ""path"": ""<DualSenseGamepadHID>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PS5 Controller;PS5 controller"",
                    ""action"": ""NavigateDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""53be6562-50a1-44ca-983e-0fa76c04b7fc"",
                    ""path"": ""<DualSenseGamepadHID>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PS5 Controller;PS5 controller"",
                    ""action"": ""NavigateLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""42eea707-1a2d-44cf-b66f-29c2eb98b590"",
                    ""path"": ""<DualSenseGamepadHID>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PS5 Controller;PS5 controller"",
                    ""action"": ""NavigateLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""be7ff605-269a-433e-8dba-18af1054031a"",
                    ""path"": ""<DualSenseGamepadHID>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PS5 Controller;PS5 controller"",
                    ""action"": ""NavigateRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""21e9145d-91f6-438e-843d-86628c06c206"",
                    ""path"": ""<DualSenseGamepadHID>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PS5 Controller;PS5 controller"",
                    ""action"": ""NavigateRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""PS5 controller"",
            ""bindingGroup"": ""PS5 controller"",
            ""devices"": [
                {
                    ""devicePath"": ""<DualSenseGamepadHID>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // MainMenu
        m_MainMenu = asset.FindActionMap("MainMenu", throwIfNotFound: true);
        m_MainMenu_NavigateUp = m_MainMenu.FindAction("NavigateUp", throwIfNotFound: true);
        m_MainMenu_NavigateDown = m_MainMenu.FindAction("NavigateDown", throwIfNotFound: true);
        m_MainMenu_NavigateLeft = m_MainMenu.FindAction("NavigateLeft", throwIfNotFound: true);
        m_MainMenu_NavigateRight = m_MainMenu.FindAction("NavigateRight", throwIfNotFound: true);
        m_MainMenu_Submit = m_MainMenu.FindAction("Submit", throwIfNotFound: true);
        // GameOverMenu
        m_GameOverMenu = asset.FindActionMap("GameOverMenu", throwIfNotFound: true);
        m_GameOverMenu_NavigateUp = m_GameOverMenu.FindAction("NavigateUp", throwIfNotFound: true);
        m_GameOverMenu_NavigateDown = m_GameOverMenu.FindAction("NavigateDown", throwIfNotFound: true);
        m_GameOverMenu_NavigateLeft = m_GameOverMenu.FindAction("NavigateLeft", throwIfNotFound: true);
        m_GameOverMenu_NavigateRight = m_GameOverMenu.FindAction("NavigateRight", throwIfNotFound: true);
        m_GameOverMenu_Submit = m_GameOverMenu.FindAction("Submit", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // MainMenu
    private readonly InputActionMap m_MainMenu;
    private List<IMainMenuActions> m_MainMenuActionsCallbackInterfaces = new List<IMainMenuActions>();
    private readonly InputAction m_MainMenu_NavigateUp;
    private readonly InputAction m_MainMenu_NavigateDown;
    private readonly InputAction m_MainMenu_NavigateLeft;
    private readonly InputAction m_MainMenu_NavigateRight;
    private readonly InputAction m_MainMenu_Submit;
    public struct MainMenuActions
    {
        private @MenuControls m_Wrapper;
        public MainMenuActions(@MenuControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @NavigateUp => m_Wrapper.m_MainMenu_NavigateUp;
        public InputAction @NavigateDown => m_Wrapper.m_MainMenu_NavigateDown;
        public InputAction @NavigateLeft => m_Wrapper.m_MainMenu_NavigateLeft;
        public InputAction @NavigateRight => m_Wrapper.m_MainMenu_NavigateRight;
        public InputAction @Submit => m_Wrapper.m_MainMenu_Submit;
        public InputActionMap Get() { return m_Wrapper.m_MainMenu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MainMenuActions set) { return set.Get(); }
        public void AddCallbacks(IMainMenuActions instance)
        {
            if (instance == null || m_Wrapper.m_MainMenuActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MainMenuActionsCallbackInterfaces.Add(instance);
            @NavigateUp.started += instance.OnNavigateUp;
            @NavigateUp.performed += instance.OnNavigateUp;
            @NavigateUp.canceled += instance.OnNavigateUp;
            @NavigateDown.started += instance.OnNavigateDown;
            @NavigateDown.performed += instance.OnNavigateDown;
            @NavigateDown.canceled += instance.OnNavigateDown;
            @NavigateLeft.started += instance.OnNavigateLeft;
            @NavigateLeft.performed += instance.OnNavigateLeft;
            @NavigateLeft.canceled += instance.OnNavigateLeft;
            @NavigateRight.started += instance.OnNavigateRight;
            @NavigateRight.performed += instance.OnNavigateRight;
            @NavigateRight.canceled += instance.OnNavigateRight;
            @Submit.started += instance.OnSubmit;
            @Submit.performed += instance.OnSubmit;
            @Submit.canceled += instance.OnSubmit;
        }

        private void UnregisterCallbacks(IMainMenuActions instance)
        {
            @NavigateUp.started -= instance.OnNavigateUp;
            @NavigateUp.performed -= instance.OnNavigateUp;
            @NavigateUp.canceled -= instance.OnNavigateUp;
            @NavigateDown.started -= instance.OnNavigateDown;
            @NavigateDown.performed -= instance.OnNavigateDown;
            @NavigateDown.canceled -= instance.OnNavigateDown;
            @NavigateLeft.started -= instance.OnNavigateLeft;
            @NavigateLeft.performed -= instance.OnNavigateLeft;
            @NavigateLeft.canceled -= instance.OnNavigateLeft;
            @NavigateRight.started -= instance.OnNavigateRight;
            @NavigateRight.performed -= instance.OnNavigateRight;
            @NavigateRight.canceled -= instance.OnNavigateRight;
            @Submit.started -= instance.OnSubmit;
            @Submit.performed -= instance.OnSubmit;
            @Submit.canceled -= instance.OnSubmit;
        }

        public void RemoveCallbacks(IMainMenuActions instance)
        {
            if (m_Wrapper.m_MainMenuActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMainMenuActions instance)
        {
            foreach (var item in m_Wrapper.m_MainMenuActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MainMenuActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MainMenuActions @MainMenu => new MainMenuActions(this);

    // GameOverMenu
    private readonly InputActionMap m_GameOverMenu;
    private List<IGameOverMenuActions> m_GameOverMenuActionsCallbackInterfaces = new List<IGameOverMenuActions>();
    private readonly InputAction m_GameOverMenu_NavigateUp;
    private readonly InputAction m_GameOverMenu_NavigateDown;
    private readonly InputAction m_GameOverMenu_NavigateLeft;
    private readonly InputAction m_GameOverMenu_NavigateRight;
    private readonly InputAction m_GameOverMenu_Submit;
    public struct GameOverMenuActions
    {
        private @MenuControls m_Wrapper;
        public GameOverMenuActions(@MenuControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @NavigateUp => m_Wrapper.m_GameOverMenu_NavigateUp;
        public InputAction @NavigateDown => m_Wrapper.m_GameOverMenu_NavigateDown;
        public InputAction @NavigateLeft => m_Wrapper.m_GameOverMenu_NavigateLeft;
        public InputAction @NavigateRight => m_Wrapper.m_GameOverMenu_NavigateRight;
        public InputAction @Submit => m_Wrapper.m_GameOverMenu_Submit;
        public InputActionMap Get() { return m_Wrapper.m_GameOverMenu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameOverMenuActions set) { return set.Get(); }
        public void AddCallbacks(IGameOverMenuActions instance)
        {
            if (instance == null || m_Wrapper.m_GameOverMenuActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GameOverMenuActionsCallbackInterfaces.Add(instance);
            @NavigateUp.started += instance.OnNavigateUp;
            @NavigateUp.performed += instance.OnNavigateUp;
            @NavigateUp.canceled += instance.OnNavigateUp;
            @NavigateDown.started += instance.OnNavigateDown;
            @NavigateDown.performed += instance.OnNavigateDown;
            @NavigateDown.canceled += instance.OnNavigateDown;
            @NavigateLeft.started += instance.OnNavigateLeft;
            @NavigateLeft.performed += instance.OnNavigateLeft;
            @NavigateLeft.canceled += instance.OnNavigateLeft;
            @NavigateRight.started += instance.OnNavigateRight;
            @NavigateRight.performed += instance.OnNavigateRight;
            @NavigateRight.canceled += instance.OnNavigateRight;
            @Submit.started += instance.OnSubmit;
            @Submit.performed += instance.OnSubmit;
            @Submit.canceled += instance.OnSubmit;
        }

        private void UnregisterCallbacks(IGameOverMenuActions instance)
        {
            @NavigateUp.started -= instance.OnNavigateUp;
            @NavigateUp.performed -= instance.OnNavigateUp;
            @NavigateUp.canceled -= instance.OnNavigateUp;
            @NavigateDown.started -= instance.OnNavigateDown;
            @NavigateDown.performed -= instance.OnNavigateDown;
            @NavigateDown.canceled -= instance.OnNavigateDown;
            @NavigateLeft.started -= instance.OnNavigateLeft;
            @NavigateLeft.performed -= instance.OnNavigateLeft;
            @NavigateLeft.canceled -= instance.OnNavigateLeft;
            @NavigateRight.started -= instance.OnNavigateRight;
            @NavigateRight.performed -= instance.OnNavigateRight;
            @NavigateRight.canceled -= instance.OnNavigateRight;
            @Submit.started -= instance.OnSubmit;
            @Submit.performed -= instance.OnSubmit;
            @Submit.canceled -= instance.OnSubmit;
        }

        public void RemoveCallbacks(IGameOverMenuActions instance)
        {
            if (m_Wrapper.m_GameOverMenuActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGameOverMenuActions instance)
        {
            foreach (var item in m_Wrapper.m_GameOverMenuActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GameOverMenuActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GameOverMenuActions @GameOverMenu => new GameOverMenuActions(this);
    private int m_PS5controllerSchemeIndex = -1;
    public InputControlScheme PS5controllerScheme
    {
        get
        {
            if (m_PS5controllerSchemeIndex == -1) m_PS5controllerSchemeIndex = asset.FindControlSchemeIndex("PS5 controller");
            return asset.controlSchemes[m_PS5controllerSchemeIndex];
        }
    }
    public interface IMainMenuActions
    {
        void OnNavigateUp(InputAction.CallbackContext context);
        void OnNavigateDown(InputAction.CallbackContext context);
        void OnNavigateLeft(InputAction.CallbackContext context);
        void OnNavigateRight(InputAction.CallbackContext context);
        void OnSubmit(InputAction.CallbackContext context);
    }
    public interface IGameOverMenuActions
    {
        void OnNavigateUp(InputAction.CallbackContext context);
        void OnNavigateDown(InputAction.CallbackContext context);
        void OnNavigateLeft(InputAction.CallbackContext context);
        void OnNavigateRight(InputAction.CallbackContext context);
        void OnSubmit(InputAction.CallbackContext context);
    }
}
